// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: amazon_ups.proto

#ifndef PROTOBUF_INCLUDED_amazon_5fups_2eproto
#define PROTOBUF_INCLUDED_amazon_5fups_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_amazon_5fups_2eproto 

namespace protobuf_amazon_5fups_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_amazon_5fups_2eproto
class AUCommands;
class AUCommandsDefaultTypeInternal;
extern AUCommandsDefaultTypeInternal _AUCommands_default_instance_;
class AUConfirmConnect;
class AUConfirmConnectDefaultTypeInternal;
extern AUConfirmConnectDefaultTypeInternal _AUConfirmConnect_default_instance_;
class AUNeedATruck;
class AUNeedATruckDefaultTypeInternal;
extern AUNeedATruckDefaultTypeInternal _AUNeedATruck_default_instance_;
class AUTruckCanGo;
class AUTruckCanGoDefaultTypeInternal;
extern AUTruckCanGoDefaultTypeInternal _AUTruckCanGo_default_instance_;
class Err;
class ErrDefaultTypeInternal;
extern ErrDefaultTypeInternal _Err_default_instance_;
class Pack;
class PackDefaultTypeInternal;
extern PackDefaultTypeInternal _Pack_default_instance_;
class Product;
class ProductDefaultTypeInternal;
extern ProductDefaultTypeInternal _Product_default_instance_;
class UAChangeAddr;
class UAChangeAddrDefaultTypeInternal;
extern UAChangeAddrDefaultTypeInternal _UAChangeAddr_default_instance_;
class UACommands;
class UACommandsDefaultTypeInternal;
extern UACommandsDefaultTypeInternal _UACommands_default_instance_;
class UADelivered;
class UADeliveredDefaultTypeInternal;
extern UADeliveredDefaultTypeInternal _UADelivered_default_instance_;
class UAInitConnect;
class UAInitConnectDefaultTypeInternal;
extern UAInitConnectDefaultTypeInternal _UAInitConnect_default_instance_;
class UATruckArrived;
class UATruckArrivedDefaultTypeInternal;
extern UATruckArrivedDefaultTypeInternal _UATruckArrived_default_instance_;
namespace google {
namespace protobuf {
template<> ::AUCommands* Arena::CreateMaybeMessage<::AUCommands>(Arena*);
template<> ::AUConfirmConnect* Arena::CreateMaybeMessage<::AUConfirmConnect>(Arena*);
template<> ::AUNeedATruck* Arena::CreateMaybeMessage<::AUNeedATruck>(Arena*);
template<> ::AUTruckCanGo* Arena::CreateMaybeMessage<::AUTruckCanGo>(Arena*);
template<> ::Err* Arena::CreateMaybeMessage<::Err>(Arena*);
template<> ::Pack* Arena::CreateMaybeMessage<::Pack>(Arena*);
template<> ::Product* Arena::CreateMaybeMessage<::Product>(Arena*);
template<> ::UAChangeAddr* Arena::CreateMaybeMessage<::UAChangeAddr>(Arena*);
template<> ::UACommands* Arena::CreateMaybeMessage<::UACommands>(Arena*);
template<> ::UADelivered* Arena::CreateMaybeMessage<::UADelivered>(Arena*);
template<> ::UAInitConnect* Arena::CreateMaybeMessage<::UAInitConnect>(Arena*);
template<> ::UATruckArrived* Arena::CreateMaybeMessage<::UATruckArrived>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class Product : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Product) */ {
 public:
  Product();
  virtual ~Product();

  Product(const Product& from);

  inline Product& operator=(const Product& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Product(Product&& from) noexcept
    : Product() {
    *this = ::std::move(from);
  }

  inline Product& operator=(Product&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Product& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Product* internal_default_instance() {
    return reinterpret_cast<const Product*>(
               &_Product_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Product* other);
  friend void swap(Product& a, Product& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Product* New() const final {
    return CreateMaybeMessage<Product>(NULL);
  }

  Product* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Product>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Product& from);
  void MergeFrom(const Product& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Product* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string description = 2;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required int32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Product)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_description();
  void clear_has_description();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 count_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Pack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pack) */ {
 public:
  Pack();
  virtual ~Pack();

  Pack(const Pack& from);

  inline Pack& operator=(const Pack& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pack(Pack&& from) noexcept
    : Pack() {
    *this = ::std::move(from);
  }

  inline Pack& operator=(Pack&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pack& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pack* internal_default_instance() {
    return reinterpret_cast<const Pack*>(
               &_Pack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Pack* other);
  friend void swap(Pack& a, Pack& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pack* New() const final {
    return CreateMaybeMessage<Pack>(NULL);
  }

  Pack* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pack>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Pack& from);
  void MergeFrom(const Pack& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Product things = 2;
  int things_size() const;
  void clear_things();
  static const int kThingsFieldNumber = 2;
  ::Product* mutable_things(int index);
  ::google::protobuf::RepeatedPtrField< ::Product >*
      mutable_things();
  const ::Product& things(int index) const;
  ::Product* add_things();
  const ::google::protobuf::RepeatedPtrField< ::Product >&
      things() const;

  // required string trackingid = 4;
  bool has_trackingid() const;
  void clear_trackingid();
  static const int kTrackingidFieldNumber = 4;
  const ::std::string& trackingid() const;
  void set_trackingid(const ::std::string& value);
  #if LANG_CXX11
  void set_trackingid(::std::string&& value);
  #endif
  void set_trackingid(const char* value);
  void set_trackingid(const char* value, size_t size);
  ::std::string* mutable_trackingid();
  ::std::string* release_trackingid();
  void set_allocated_trackingid(::std::string* trackingid);

  // required int32 wh_id = 1;
  bool has_wh_id() const;
  void clear_wh_id();
  static const int kWhIdFieldNumber = 1;
  ::google::protobuf::int32 wh_id() const;
  void set_wh_id(::google::protobuf::int32 value);

  // optional int32 upsaccount = 6;
  bool has_upsaccount() const;
  void clear_upsaccount();
  static const int kUpsaccountFieldNumber = 6;
  ::google::protobuf::int32 upsaccount() const;
  void set_upsaccount(::google::protobuf::int32 value);

  // required int64 packageid = 5;
  bool has_packageid() const;
  void clear_packageid();
  static const int kPackageidFieldNumber = 5;
  ::google::protobuf::int64 packageid() const;
  void set_packageid(::google::protobuf::int64 value);

  // required int32 amazonaccount = 7;
  bool has_amazonaccount() const;
  void clear_amazonaccount();
  static const int kAmazonaccountFieldNumber = 7;
  ::google::protobuf::int32 amazonaccount() const;
  void set_amazonaccount(::google::protobuf::int32 value);

  // required int32 dest_x = 8;
  bool has_dest_x() const;
  void clear_dest_x();
  static const int kDestXFieldNumber = 8;
  ::google::protobuf::int32 dest_x() const;
  void set_dest_x(::google::protobuf::int32 value);

  // required int32 dest_y = 9;
  bool has_dest_y() const;
  void clear_dest_y();
  static const int kDestYFieldNumber = 9;
  ::google::protobuf::int32 dest_y() const;
  void set_dest_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pack)
 private:
  void set_has_wh_id();
  void clear_has_wh_id();
  void set_has_trackingid();
  void clear_has_trackingid();
  void set_has_packageid();
  void clear_has_packageid();
  void set_has_upsaccount();
  void clear_has_upsaccount();
  void set_has_amazonaccount();
  void clear_has_amazonaccount();
  void set_has_dest_x();
  void clear_has_dest_x();
  void set_has_dest_y();
  void clear_has_dest_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Product > things_;
  ::google::protobuf::internal::ArenaStringPtr trackingid_;
  ::google::protobuf::int32 wh_id_;
  ::google::protobuf::int32 upsaccount_;
  ::google::protobuf::int64 packageid_;
  ::google::protobuf::int32 amazonaccount_;
  ::google::protobuf::int32 dest_x_;
  ::google::protobuf::int32 dest_y_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UAInitConnect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UAInitConnect) */ {
 public:
  UAInitConnect();
  virtual ~UAInitConnect();

  UAInitConnect(const UAInitConnect& from);

  inline UAInitConnect& operator=(const UAInitConnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UAInitConnect(UAInitConnect&& from) noexcept
    : UAInitConnect() {
    *this = ::std::move(from);
  }

  inline UAInitConnect& operator=(UAInitConnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UAInitConnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UAInitConnect* internal_default_instance() {
    return reinterpret_cast<const UAInitConnect*>(
               &_UAInitConnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(UAInitConnect* other);
  friend void swap(UAInitConnect& a, UAInitConnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UAInitConnect* New() const final {
    return CreateMaybeMessage<UAInitConnect>(NULL);
  }

  UAInitConnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UAInitConnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UAInitConnect& from);
  void MergeFrom(const UAInitConnect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UAInitConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 worldid = 1;
  bool has_worldid() const;
  void clear_worldid();
  static const int kWorldidFieldNumber = 1;
  ::google::protobuf::int64 worldid() const;
  void set_worldid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UAInitConnect)
 private:
  void set_has_worldid();
  void clear_has_worldid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 worldid_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AUConfirmConnect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AUConfirmConnect) */ {
 public:
  AUConfirmConnect();
  virtual ~AUConfirmConnect();

  AUConfirmConnect(const AUConfirmConnect& from);

  inline AUConfirmConnect& operator=(const AUConfirmConnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AUConfirmConnect(AUConfirmConnect&& from) noexcept
    : AUConfirmConnect() {
    *this = ::std::move(from);
  }

  inline AUConfirmConnect& operator=(AUConfirmConnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AUConfirmConnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AUConfirmConnect* internal_default_instance() {
    return reinterpret_cast<const AUConfirmConnect*>(
               &_AUConfirmConnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AUConfirmConnect* other);
  friend void swap(AUConfirmConnect& a, AUConfirmConnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AUConfirmConnect* New() const final {
    return CreateMaybeMessage<AUConfirmConnect>(NULL);
  }

  AUConfirmConnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AUConfirmConnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AUConfirmConnect& from);
  void MergeFrom(const AUConfirmConnect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AUConfirmConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 worldid = 1;
  bool has_worldid() const;
  void clear_worldid();
  static const int kWorldidFieldNumber = 1;
  ::google::protobuf::int64 worldid() const;
  void set_worldid(::google::protobuf::int64 value);

  // required bool connected = 2;
  bool has_connected() const;
  void clear_connected();
  static const int kConnectedFieldNumber = 2;
  bool connected() const;
  void set_connected(bool value);

  // @@protoc_insertion_point(class_scope:AUConfirmConnect)
 private:
  void set_has_worldid();
  void clear_has_worldid();
  void set_has_connected();
  void clear_has_connected();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 worldid_;
  bool connected_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AUNeedATruck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AUNeedATruck) */ {
 public:
  AUNeedATruck();
  virtual ~AUNeedATruck();

  AUNeedATruck(const AUNeedATruck& from);

  inline AUNeedATruck& operator=(const AUNeedATruck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AUNeedATruck(AUNeedATruck&& from) noexcept
    : AUNeedATruck() {
    *this = ::std::move(from);
  }

  inline AUNeedATruck& operator=(AUNeedATruck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AUNeedATruck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AUNeedATruck* internal_default_instance() {
    return reinterpret_cast<const AUNeedATruck*>(
               &_AUNeedATruck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AUNeedATruck* other);
  friend void swap(AUNeedATruck& a, AUNeedATruck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AUNeedATruck* New() const final {
    return CreateMaybeMessage<AUNeedATruck>(NULL);
  }

  AUNeedATruck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AUNeedATruck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AUNeedATruck& from);
  void MergeFrom(const AUNeedATruck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AUNeedATruck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pack pack = 1;
  bool has_pack() const;
  void clear_pack();
  static const int kPackFieldNumber = 1;
  private:
  const ::Pack& _internal_pack() const;
  public:
  const ::Pack& pack() const;
  ::Pack* release_pack();
  ::Pack* mutable_pack();
  void set_allocated_pack(::Pack* pack);

  // required int64 seqnum = 2;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 2;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AUNeedATruck)
 private:
  void set_has_pack();
  void clear_has_pack();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::Pack* pack_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AUTruckCanGo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AUTruckCanGo) */ {
 public:
  AUTruckCanGo();
  virtual ~AUTruckCanGo();

  AUTruckCanGo(const AUTruckCanGo& from);

  inline AUTruckCanGo& operator=(const AUTruckCanGo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AUTruckCanGo(AUTruckCanGo&& from) noexcept
    : AUTruckCanGo() {
    *this = ::std::move(from);
  }

  inline AUTruckCanGo& operator=(AUTruckCanGo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AUTruckCanGo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AUTruckCanGo* internal_default_instance() {
    return reinterpret_cast<const AUTruckCanGo*>(
               &_AUTruckCanGo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AUTruckCanGo* other);
  friend void swap(AUTruckCanGo& a, AUTruckCanGo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AUTruckCanGo* New() const final {
    return CreateMaybeMessage<AUTruckCanGo>(NULL);
  }

  AUTruckCanGo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AUTruckCanGo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AUTruckCanGo& from);
  void MergeFrom(const AUTruckCanGo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AUTruckCanGo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 seqnum = 2;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 2;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // required int32 truckid = 1;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AUTruckCanGo)
 private:
  void set_has_truckid();
  void clear_has_truckid();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 seqnum_;
  ::google::protobuf::int32 truckid_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UATruckArrived : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UATruckArrived) */ {
 public:
  UATruckArrived();
  virtual ~UATruckArrived();

  UATruckArrived(const UATruckArrived& from);

  inline UATruckArrived& operator=(const UATruckArrived& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UATruckArrived(UATruckArrived&& from) noexcept
    : UATruckArrived() {
    *this = ::std::move(from);
  }

  inline UATruckArrived& operator=(UATruckArrived&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UATruckArrived& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UATruckArrived* internal_default_instance() {
    return reinterpret_cast<const UATruckArrived*>(
               &_UATruckArrived_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(UATruckArrived* other);
  friend void swap(UATruckArrived& a, UATruckArrived& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UATruckArrived* New() const final {
    return CreateMaybeMessage<UATruckArrived>(NULL);
  }

  UATruckArrived* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UATruckArrived>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UATruckArrived& from);
  void MergeFrom(const UATruckArrived& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UATruckArrived* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string trackingid = 2;
  bool has_trackingid() const;
  void clear_trackingid();
  static const int kTrackingidFieldNumber = 2;
  const ::std::string& trackingid() const;
  void set_trackingid(const ::std::string& value);
  #if LANG_CXX11
  void set_trackingid(::std::string&& value);
  #endif
  void set_trackingid(const char* value);
  void set_trackingid(const char* value, size_t size);
  ::std::string* mutable_trackingid();
  ::std::string* release_trackingid();
  void set_allocated_trackingid(::std::string* trackingid);

  // required int32 truckid = 1;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // required int32 wh_id = 3;
  bool has_wh_id() const;
  void clear_wh_id();
  static const int kWhIdFieldNumber = 3;
  ::google::protobuf::int32 wh_id() const;
  void set_wh_id(::google::protobuf::int32 value);

  // required int64 seqnum = 4;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 4;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UATruckArrived)
 private:
  void set_has_truckid();
  void clear_has_truckid();
  void set_has_trackingid();
  void clear_has_trackingid();
  void set_has_wh_id();
  void clear_has_wh_id();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr trackingid_;
  ::google::protobuf::int32 truckid_;
  ::google::protobuf::int32 wh_id_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UADelivered : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UADelivered) */ {
 public:
  UADelivered();
  virtual ~UADelivered();

  UADelivered(const UADelivered& from);

  inline UADelivered& operator=(const UADelivered& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UADelivered(UADelivered&& from) noexcept
    : UADelivered() {
    *this = ::std::move(from);
  }

  inline UADelivered& operator=(UADelivered&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UADelivered& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UADelivered* internal_default_instance() {
    return reinterpret_cast<const UADelivered*>(
               &_UADelivered_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(UADelivered* other);
  friend void swap(UADelivered& a, UADelivered& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UADelivered* New() const final {
    return CreateMaybeMessage<UADelivered>(NULL);
  }

  UADelivered* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UADelivered>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UADelivered& from);
  void MergeFrom(const UADelivered& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UADelivered* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string trackingid = 1;
  bool has_trackingid() const;
  void clear_trackingid();
  static const int kTrackingidFieldNumber = 1;
  const ::std::string& trackingid() const;
  void set_trackingid(const ::std::string& value);
  #if LANG_CXX11
  void set_trackingid(::std::string&& value);
  #endif
  void set_trackingid(const char* value);
  void set_trackingid(const char* value, size_t size);
  ::std::string* mutable_trackingid();
  ::std::string* release_trackingid();
  void set_allocated_trackingid(::std::string* trackingid);

  // required int64 seqnum = 3;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 3;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // required int32 truckid = 2;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 2;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UADelivered)
 private:
  void set_has_trackingid();
  void clear_has_trackingid();
  void set_has_truckid();
  void clear_has_truckid();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr trackingid_;
  ::google::protobuf::int64 seqnum_;
  ::google::protobuf::int32 truckid_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UAChangeAddr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UAChangeAddr) */ {
 public:
  UAChangeAddr();
  virtual ~UAChangeAddr();

  UAChangeAddr(const UAChangeAddr& from);

  inline UAChangeAddr& operator=(const UAChangeAddr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UAChangeAddr(UAChangeAddr&& from) noexcept
    : UAChangeAddr() {
    *this = ::std::move(from);
  }

  inline UAChangeAddr& operator=(UAChangeAddr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UAChangeAddr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UAChangeAddr* internal_default_instance() {
    return reinterpret_cast<const UAChangeAddr*>(
               &_UAChangeAddr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(UAChangeAddr* other);
  friend void swap(UAChangeAddr& a, UAChangeAddr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UAChangeAddr* New() const final {
    return CreateMaybeMessage<UAChangeAddr>(NULL);
  }

  UAChangeAddr* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UAChangeAddr>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UAChangeAddr& from);
  void MergeFrom(const UAChangeAddr& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UAChangeAddr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string trackingid = 1;
  bool has_trackingid() const;
  void clear_trackingid();
  static const int kTrackingidFieldNumber = 1;
  const ::std::string& trackingid() const;
  void set_trackingid(const ::std::string& value);
  #if LANG_CXX11
  void set_trackingid(::std::string&& value);
  #endif
  void set_trackingid(const char* value);
  void set_trackingid(const char* value, size_t size);
  ::std::string* mutable_trackingid();
  ::std::string* release_trackingid();
  void set_allocated_trackingid(::std::string* trackingid);

  // required int32 dest_x = 2;
  bool has_dest_x() const;
  void clear_dest_x();
  static const int kDestXFieldNumber = 2;
  ::google::protobuf::int32 dest_x() const;
  void set_dest_x(::google::protobuf::int32 value);

  // required int32 dest_y = 3;
  bool has_dest_y() const;
  void clear_dest_y();
  static const int kDestYFieldNumber = 3;
  ::google::protobuf::int32 dest_y() const;
  void set_dest_y(::google::protobuf::int32 value);

  // required int64 seqnum = 4;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 4;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UAChangeAddr)
 private:
  void set_has_trackingid();
  void clear_has_trackingid();
  void set_has_dest_x();
  void clear_has_dest_x();
  void set_has_dest_y();
  void clear_has_dest_y();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr trackingid_;
  ::google::protobuf::int32 dest_x_;
  ::google::protobuf::int32 dest_y_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Err : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Err) */ {
 public:
  Err();
  virtual ~Err();

  Err(const Err& from);

  inline Err& operator=(const Err& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Err(Err&& from) noexcept
    : Err() {
    *this = ::std::move(from);
  }

  inline Err& operator=(Err&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Err& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Err* internal_default_instance() {
    return reinterpret_cast<const Err*>(
               &_Err_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Err* other);
  friend void swap(Err& a, Err& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Err* New() const final {
    return CreateMaybeMessage<Err>(NULL);
  }

  Err* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Err>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Err& from);
  void MergeFrom(const Err& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Err* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // required int64 originseqnum = 2;
  bool has_originseqnum() const;
  void clear_originseqnum();
  static const int kOriginseqnumFieldNumber = 2;
  ::google::protobuf::int64 originseqnum() const;
  void set_originseqnum(::google::protobuf::int64 value);

  // required int64 seqnum = 3;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 3;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Err)
 private:
  void set_has_msg();
  void clear_has_msg();
  void set_has_originseqnum();
  void clear_has_originseqnum();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 originseqnum_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AUCommands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AUCommands) */ {
 public:
  AUCommands();
  virtual ~AUCommands();

  AUCommands(const AUCommands& from);

  inline AUCommands& operator=(const AUCommands& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AUCommands(AUCommands&& from) noexcept
    : AUCommands() {
    *this = ::std::move(from);
  }

  inline AUCommands& operator=(AUCommands&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AUCommands& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AUCommands* internal_default_instance() {
    return reinterpret_cast<const AUCommands*>(
               &_AUCommands_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(AUCommands* other);
  friend void swap(AUCommands& a, AUCommands& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AUCommands* New() const final {
    return CreateMaybeMessage<AUCommands>(NULL);
  }

  AUCommands* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AUCommands>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AUCommands& from);
  void MergeFrom(const AUCommands& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AUCommands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AUNeedATruck need = 1;
  int need_size() const;
  void clear_need();
  static const int kNeedFieldNumber = 1;
  ::AUNeedATruck* mutable_need(int index);
  ::google::protobuf::RepeatedPtrField< ::AUNeedATruck >*
      mutable_need();
  const ::AUNeedATruck& need(int index) const;
  ::AUNeedATruck* add_need();
  const ::google::protobuf::RepeatedPtrField< ::AUNeedATruck >&
      need() const;

  // repeated .AUTruckCanGo go = 2;
  int go_size() const;
  void clear_go();
  static const int kGoFieldNumber = 2;
  ::AUTruckCanGo* mutable_go(int index);
  ::google::protobuf::RepeatedPtrField< ::AUTruckCanGo >*
      mutable_go();
  const ::AUTruckCanGo& go(int index) const;
  ::AUTruckCanGo* add_go();
  const ::google::protobuf::RepeatedPtrField< ::AUTruckCanGo >&
      go() const;

  // repeated .Err errors = 3;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 3;
  ::Err* mutable_errors(int index);
  ::google::protobuf::RepeatedPtrField< ::Err >*
      mutable_errors();
  const ::Err& errors(int index) const;
  ::Err* add_errors();
  const ::google::protobuf::RepeatedPtrField< ::Err >&
      errors() const;

  // repeated int64 acks = 4;
  int acks_size() const;
  void clear_acks();
  static const int kAcksFieldNumber = 4;
  ::google::protobuf::int64 acks(int index) const;
  void set_acks(int index, ::google::protobuf::int64 value);
  void add_acks(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      acks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_acks();

  // @@protoc_insertion_point(class_scope:AUCommands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::AUNeedATruck > need_;
  ::google::protobuf::RepeatedPtrField< ::AUTruckCanGo > go_;
  ::google::protobuf::RepeatedPtrField< ::Err > errors_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > acks_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UACommands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UACommands) */ {
 public:
  UACommands();
  virtual ~UACommands();

  UACommands(const UACommands& from);

  inline UACommands& operator=(const UACommands& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UACommands(UACommands&& from) noexcept
    : UACommands() {
    *this = ::std::move(from);
  }

  inline UACommands& operator=(UACommands&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UACommands& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UACommands* internal_default_instance() {
    return reinterpret_cast<const UACommands*>(
               &_UACommands_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(UACommands* other);
  friend void swap(UACommands& a, UACommands& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UACommands* New() const final {
    return CreateMaybeMessage<UACommands>(NULL);
  }

  UACommands* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UACommands>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UACommands& from);
  void MergeFrom(const UACommands& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UACommands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UATruckArrived arrived = 1;
  int arrived_size() const;
  void clear_arrived();
  static const int kArrivedFieldNumber = 1;
  ::UATruckArrived* mutable_arrived(int index);
  ::google::protobuf::RepeatedPtrField< ::UATruckArrived >*
      mutable_arrived();
  const ::UATruckArrived& arrived(int index) const;
  ::UATruckArrived* add_arrived();
  const ::google::protobuf::RepeatedPtrField< ::UATruckArrived >&
      arrived() const;

  // repeated .UADelivered delivered = 2;
  int delivered_size() const;
  void clear_delivered();
  static const int kDeliveredFieldNumber = 2;
  ::UADelivered* mutable_delivered(int index);
  ::google::protobuf::RepeatedPtrField< ::UADelivered >*
      mutable_delivered();
  const ::UADelivered& delivered(int index) const;
  ::UADelivered* add_delivered();
  const ::google::protobuf::RepeatedPtrField< ::UADelivered >&
      delivered() const;

  // repeated .UAChangeAddr changeAddr = 3;
  int changeaddr_size() const;
  void clear_changeaddr();
  static const int kChangeAddrFieldNumber = 3;
  ::UAChangeAddr* mutable_changeaddr(int index);
  ::google::protobuf::RepeatedPtrField< ::UAChangeAddr >*
      mutable_changeaddr();
  const ::UAChangeAddr& changeaddr(int index) const;
  ::UAChangeAddr* add_changeaddr();
  const ::google::protobuf::RepeatedPtrField< ::UAChangeAddr >&
      changeaddr() const;

  // repeated .Err errors = 4;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 4;
  ::Err* mutable_errors(int index);
  ::google::protobuf::RepeatedPtrField< ::Err >*
      mutable_errors();
  const ::Err& errors(int index) const;
  ::Err* add_errors();
  const ::google::protobuf::RepeatedPtrField< ::Err >&
      errors() const;

  // repeated int64 acks = 5;
  int acks_size() const;
  void clear_acks();
  static const int kAcksFieldNumber = 5;
  ::google::protobuf::int64 acks(int index) const;
  void set_acks(int index, ::google::protobuf::int64 value);
  void add_acks(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      acks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_acks();

  // @@protoc_insertion_point(class_scope:UACommands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UATruckArrived > arrived_;
  ::google::protobuf::RepeatedPtrField< ::UADelivered > delivered_;
  ::google::protobuf::RepeatedPtrField< ::UAChangeAddr > changeaddr_;
  ::google::protobuf::RepeatedPtrField< ::Err > errors_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > acks_;
  friend struct ::protobuf_amazon_5fups_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Product

// required int64 id = 1;
inline bool Product::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Product::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Product::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Product::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Product::id() const {
  // @@protoc_insertion_point(field_get:Product.id)
  return id_;
}
inline void Product::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Product.id)
}

// required string description = 2;
inline bool Product::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Product::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Product::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Product::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& Product::description() const {
  // @@protoc_insertion_point(field_get:Product.description)
  return description_.GetNoArena();
}
inline void Product::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Product.description)
}
#if LANG_CXX11
inline void Product::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Product.description)
}
#endif
inline void Product::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Product.description)
}
inline void Product::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Product.description)
}
inline ::std::string* Product::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:Product.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Product::release_description() {
  // @@protoc_insertion_point(field_release:Product.description)
  if (!has_description()) {
    return NULL;
  }
  clear_has_description();
  return description_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Product::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:Product.description)
}

// required int32 count = 3;
inline bool Product::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Product::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Product::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Product::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Product::count() const {
  // @@protoc_insertion_point(field_get:Product.count)
  return count_;
}
inline void Product::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Product.count)
}

// -------------------------------------------------------------------

// Pack

// required int32 wh_id = 1;
inline bool Pack::has_wh_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pack::set_has_wh_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pack::clear_has_wh_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pack::clear_wh_id() {
  wh_id_ = 0;
  clear_has_wh_id();
}
inline ::google::protobuf::int32 Pack::wh_id() const {
  // @@protoc_insertion_point(field_get:Pack.wh_id)
  return wh_id_;
}
inline void Pack::set_wh_id(::google::protobuf::int32 value) {
  set_has_wh_id();
  wh_id_ = value;
  // @@protoc_insertion_point(field_set:Pack.wh_id)
}

// repeated .Product things = 2;
inline int Pack::things_size() const {
  return things_.size();
}
inline void Pack::clear_things() {
  things_.Clear();
}
inline ::Product* Pack::mutable_things(int index) {
  // @@protoc_insertion_point(field_mutable:Pack.things)
  return things_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Product >*
Pack::mutable_things() {
  // @@protoc_insertion_point(field_mutable_list:Pack.things)
  return &things_;
}
inline const ::Product& Pack::things(int index) const {
  // @@protoc_insertion_point(field_get:Pack.things)
  return things_.Get(index);
}
inline ::Product* Pack::add_things() {
  // @@protoc_insertion_point(field_add:Pack.things)
  return things_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Product >&
Pack::things() const {
  // @@protoc_insertion_point(field_list:Pack.things)
  return things_;
}

// required string trackingid = 4;
inline bool Pack::has_trackingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pack::set_has_trackingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pack::clear_has_trackingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pack::clear_trackingid() {
  trackingid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trackingid();
}
inline const ::std::string& Pack::trackingid() const {
  // @@protoc_insertion_point(field_get:Pack.trackingid)
  return trackingid_.GetNoArena();
}
inline void Pack::set_trackingid(const ::std::string& value) {
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pack.trackingid)
}
#if LANG_CXX11
inline void Pack::set_trackingid(::std::string&& value) {
  set_has_trackingid();
  trackingid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pack.trackingid)
}
#endif
inline void Pack::set_trackingid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pack.trackingid)
}
inline void Pack::set_trackingid(const char* value, size_t size) {
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pack.trackingid)
}
inline ::std::string* Pack::mutable_trackingid() {
  set_has_trackingid();
  // @@protoc_insertion_point(field_mutable:Pack.trackingid)
  return trackingid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Pack::release_trackingid() {
  // @@protoc_insertion_point(field_release:Pack.trackingid)
  if (!has_trackingid()) {
    return NULL;
  }
  clear_has_trackingid();
  return trackingid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Pack::set_allocated_trackingid(::std::string* trackingid) {
  if (trackingid != NULL) {
    set_has_trackingid();
  } else {
    clear_has_trackingid();
  }
  trackingid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trackingid);
  // @@protoc_insertion_point(field_set_allocated:Pack.trackingid)
}

// required int64 packageid = 5;
inline bool Pack::has_packageid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Pack::set_has_packageid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Pack::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Pack::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
inline ::google::protobuf::int64 Pack::packageid() const {
  // @@protoc_insertion_point(field_get:Pack.packageid)
  return packageid_;
}
inline void Pack::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:Pack.packageid)
}

// optional int32 upsaccount = 6;
inline bool Pack::has_upsaccount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Pack::set_has_upsaccount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Pack::clear_has_upsaccount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Pack::clear_upsaccount() {
  upsaccount_ = 0;
  clear_has_upsaccount();
}
inline ::google::protobuf::int32 Pack::upsaccount() const {
  // @@protoc_insertion_point(field_get:Pack.upsaccount)
  return upsaccount_;
}
inline void Pack::set_upsaccount(::google::protobuf::int32 value) {
  set_has_upsaccount();
  upsaccount_ = value;
  // @@protoc_insertion_point(field_set:Pack.upsaccount)
}

// required int32 amazonaccount = 7;
inline bool Pack::has_amazonaccount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Pack::set_has_amazonaccount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Pack::clear_has_amazonaccount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Pack::clear_amazonaccount() {
  amazonaccount_ = 0;
  clear_has_amazonaccount();
}
inline ::google::protobuf::int32 Pack::amazonaccount() const {
  // @@protoc_insertion_point(field_get:Pack.amazonaccount)
  return amazonaccount_;
}
inline void Pack::set_amazonaccount(::google::protobuf::int32 value) {
  set_has_amazonaccount();
  amazonaccount_ = value;
  // @@protoc_insertion_point(field_set:Pack.amazonaccount)
}

// required int32 dest_x = 8;
inline bool Pack::has_dest_x() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Pack::set_has_dest_x() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Pack::clear_has_dest_x() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Pack::clear_dest_x() {
  dest_x_ = 0;
  clear_has_dest_x();
}
inline ::google::protobuf::int32 Pack::dest_x() const {
  // @@protoc_insertion_point(field_get:Pack.dest_x)
  return dest_x_;
}
inline void Pack::set_dest_x(::google::protobuf::int32 value) {
  set_has_dest_x();
  dest_x_ = value;
  // @@protoc_insertion_point(field_set:Pack.dest_x)
}

// required int32 dest_y = 9;
inline bool Pack::has_dest_y() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Pack::set_has_dest_y() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Pack::clear_has_dest_y() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Pack::clear_dest_y() {
  dest_y_ = 0;
  clear_has_dest_y();
}
inline ::google::protobuf::int32 Pack::dest_y() const {
  // @@protoc_insertion_point(field_get:Pack.dest_y)
  return dest_y_;
}
inline void Pack::set_dest_y(::google::protobuf::int32 value) {
  set_has_dest_y();
  dest_y_ = value;
  // @@protoc_insertion_point(field_set:Pack.dest_y)
}

// -------------------------------------------------------------------

// UAInitConnect

// required int64 worldid = 1;
inline bool UAInitConnect::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UAInitConnect::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UAInitConnect::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UAInitConnect::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
  clear_has_worldid();
}
inline ::google::protobuf::int64 UAInitConnect::worldid() const {
  // @@protoc_insertion_point(field_get:UAInitConnect.worldid)
  return worldid_;
}
inline void UAInitConnect::set_worldid(::google::protobuf::int64 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:UAInitConnect.worldid)
}

// -------------------------------------------------------------------

// AUConfirmConnect

// required int64 worldid = 1;
inline bool AUConfirmConnect::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AUConfirmConnect::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AUConfirmConnect::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AUConfirmConnect::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
  clear_has_worldid();
}
inline ::google::protobuf::int64 AUConfirmConnect::worldid() const {
  // @@protoc_insertion_point(field_get:AUConfirmConnect.worldid)
  return worldid_;
}
inline void AUConfirmConnect::set_worldid(::google::protobuf::int64 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:AUConfirmConnect.worldid)
}

// required bool connected = 2;
inline bool AUConfirmConnect::has_connected() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AUConfirmConnect::set_has_connected() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AUConfirmConnect::clear_has_connected() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AUConfirmConnect::clear_connected() {
  connected_ = false;
  clear_has_connected();
}
inline bool AUConfirmConnect::connected() const {
  // @@protoc_insertion_point(field_get:AUConfirmConnect.connected)
  return connected_;
}
inline void AUConfirmConnect::set_connected(bool value) {
  set_has_connected();
  connected_ = value;
  // @@protoc_insertion_point(field_set:AUConfirmConnect.connected)
}

// -------------------------------------------------------------------

// AUNeedATruck

// required .Pack pack = 1;
inline bool AUNeedATruck::has_pack() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AUNeedATruck::set_has_pack() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AUNeedATruck::clear_has_pack() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AUNeedATruck::clear_pack() {
  if (pack_ != NULL) pack_->Clear();
  clear_has_pack();
}
inline const ::Pack& AUNeedATruck::_internal_pack() const {
  return *pack_;
}
inline const ::Pack& AUNeedATruck::pack() const {
  const ::Pack* p = pack_;
  // @@protoc_insertion_point(field_get:AUNeedATruck.pack)
  return p != NULL ? *p : *reinterpret_cast<const ::Pack*>(
      &::_Pack_default_instance_);
}
inline ::Pack* AUNeedATruck::release_pack() {
  // @@protoc_insertion_point(field_release:AUNeedATruck.pack)
  clear_has_pack();
  ::Pack* temp = pack_;
  pack_ = NULL;
  return temp;
}
inline ::Pack* AUNeedATruck::mutable_pack() {
  set_has_pack();
  if (pack_ == NULL) {
    auto* p = CreateMaybeMessage<::Pack>(GetArenaNoVirtual());
    pack_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AUNeedATruck.pack)
  return pack_;
}
inline void AUNeedATruck::set_allocated_pack(::Pack* pack) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pack_;
  }
  if (pack) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pack = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pack, submessage_arena);
    }
    set_has_pack();
  } else {
    clear_has_pack();
  }
  pack_ = pack;
  // @@protoc_insertion_point(field_set_allocated:AUNeedATruck.pack)
}

// required int64 seqnum = 2;
inline bool AUNeedATruck::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AUNeedATruck::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AUNeedATruck::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AUNeedATruck::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 AUNeedATruck::seqnum() const {
  // @@protoc_insertion_point(field_get:AUNeedATruck.seqnum)
  return seqnum_;
}
inline void AUNeedATruck::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:AUNeedATruck.seqnum)
}

// -------------------------------------------------------------------

// AUTruckCanGo

// required int32 truckid = 1;
inline bool AUTruckCanGo::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AUTruckCanGo::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AUTruckCanGo::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AUTruckCanGo::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 AUTruckCanGo::truckid() const {
  // @@protoc_insertion_point(field_get:AUTruckCanGo.truckid)
  return truckid_;
}
inline void AUTruckCanGo::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:AUTruckCanGo.truckid)
}

// required int64 seqnum = 2;
inline bool AUTruckCanGo::has_seqnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AUTruckCanGo::set_has_seqnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AUTruckCanGo::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AUTruckCanGo::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 AUTruckCanGo::seqnum() const {
  // @@protoc_insertion_point(field_get:AUTruckCanGo.seqnum)
  return seqnum_;
}
inline void AUTruckCanGo::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:AUTruckCanGo.seqnum)
}

// -------------------------------------------------------------------

// UATruckArrived

// required int32 truckid = 1;
inline bool UATruckArrived::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UATruckArrived::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UATruckArrived::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UATruckArrived::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 UATruckArrived::truckid() const {
  // @@protoc_insertion_point(field_get:UATruckArrived.truckid)
  return truckid_;
}
inline void UATruckArrived::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UATruckArrived.truckid)
}

// required string trackingid = 2;
inline bool UATruckArrived::has_trackingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UATruckArrived::set_has_trackingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UATruckArrived::clear_has_trackingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UATruckArrived::clear_trackingid() {
  trackingid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trackingid();
}
inline const ::std::string& UATruckArrived::trackingid() const {
  // @@protoc_insertion_point(field_get:UATruckArrived.trackingid)
  return trackingid_.GetNoArena();
}
inline void UATruckArrived::set_trackingid(const ::std::string& value) {
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UATruckArrived.trackingid)
}
#if LANG_CXX11
inline void UATruckArrived::set_trackingid(::std::string&& value) {
  set_has_trackingid();
  trackingid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UATruckArrived.trackingid)
}
#endif
inline void UATruckArrived::set_trackingid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UATruckArrived.trackingid)
}
inline void UATruckArrived::set_trackingid(const char* value, size_t size) {
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UATruckArrived.trackingid)
}
inline ::std::string* UATruckArrived::mutable_trackingid() {
  set_has_trackingid();
  // @@protoc_insertion_point(field_mutable:UATruckArrived.trackingid)
  return trackingid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UATruckArrived::release_trackingid() {
  // @@protoc_insertion_point(field_release:UATruckArrived.trackingid)
  if (!has_trackingid()) {
    return NULL;
  }
  clear_has_trackingid();
  return trackingid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UATruckArrived::set_allocated_trackingid(::std::string* trackingid) {
  if (trackingid != NULL) {
    set_has_trackingid();
  } else {
    clear_has_trackingid();
  }
  trackingid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trackingid);
  // @@protoc_insertion_point(field_set_allocated:UATruckArrived.trackingid)
}

// required int32 wh_id = 3;
inline bool UATruckArrived::has_wh_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UATruckArrived::set_has_wh_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UATruckArrived::clear_has_wh_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UATruckArrived::clear_wh_id() {
  wh_id_ = 0;
  clear_has_wh_id();
}
inline ::google::protobuf::int32 UATruckArrived::wh_id() const {
  // @@protoc_insertion_point(field_get:UATruckArrived.wh_id)
  return wh_id_;
}
inline void UATruckArrived::set_wh_id(::google::protobuf::int32 value) {
  set_has_wh_id();
  wh_id_ = value;
  // @@protoc_insertion_point(field_set:UATruckArrived.wh_id)
}

// required int64 seqnum = 4;
inline bool UATruckArrived::has_seqnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UATruckArrived::set_has_seqnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UATruckArrived::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UATruckArrived::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UATruckArrived::seqnum() const {
  // @@protoc_insertion_point(field_get:UATruckArrived.seqnum)
  return seqnum_;
}
inline void UATruckArrived::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UATruckArrived.seqnum)
}

// -------------------------------------------------------------------

// UADelivered

// required string trackingid = 1;
inline bool UADelivered::has_trackingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UADelivered::set_has_trackingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UADelivered::clear_has_trackingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UADelivered::clear_trackingid() {
  trackingid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trackingid();
}
inline const ::std::string& UADelivered::trackingid() const {
  // @@protoc_insertion_point(field_get:UADelivered.trackingid)
  return trackingid_.GetNoArena();
}
inline void UADelivered::set_trackingid(const ::std::string& value) {
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UADelivered.trackingid)
}
#if LANG_CXX11
inline void UADelivered::set_trackingid(::std::string&& value) {
  set_has_trackingid();
  trackingid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UADelivered.trackingid)
}
#endif
inline void UADelivered::set_trackingid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UADelivered.trackingid)
}
inline void UADelivered::set_trackingid(const char* value, size_t size) {
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UADelivered.trackingid)
}
inline ::std::string* UADelivered::mutable_trackingid() {
  set_has_trackingid();
  // @@protoc_insertion_point(field_mutable:UADelivered.trackingid)
  return trackingid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UADelivered::release_trackingid() {
  // @@protoc_insertion_point(field_release:UADelivered.trackingid)
  if (!has_trackingid()) {
    return NULL;
  }
  clear_has_trackingid();
  return trackingid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UADelivered::set_allocated_trackingid(::std::string* trackingid) {
  if (trackingid != NULL) {
    set_has_trackingid();
  } else {
    clear_has_trackingid();
  }
  trackingid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trackingid);
  // @@protoc_insertion_point(field_set_allocated:UADelivered.trackingid)
}

// required int32 truckid = 2;
inline bool UADelivered::has_truckid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UADelivered::set_has_truckid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UADelivered::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UADelivered::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 UADelivered::truckid() const {
  // @@protoc_insertion_point(field_get:UADelivered.truckid)
  return truckid_;
}
inline void UADelivered::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UADelivered.truckid)
}

// required int64 seqnum = 3;
inline bool UADelivered::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UADelivered::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UADelivered::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UADelivered::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UADelivered::seqnum() const {
  // @@protoc_insertion_point(field_get:UADelivered.seqnum)
  return seqnum_;
}
inline void UADelivered::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UADelivered.seqnum)
}

// -------------------------------------------------------------------

// UAChangeAddr

// required string trackingid = 1;
inline bool UAChangeAddr::has_trackingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UAChangeAddr::set_has_trackingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UAChangeAddr::clear_has_trackingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UAChangeAddr::clear_trackingid() {
  trackingid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trackingid();
}
inline const ::std::string& UAChangeAddr::trackingid() const {
  // @@protoc_insertion_point(field_get:UAChangeAddr.trackingid)
  return trackingid_.GetNoArena();
}
inline void UAChangeAddr::set_trackingid(const ::std::string& value) {
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UAChangeAddr.trackingid)
}
#if LANG_CXX11
inline void UAChangeAddr::set_trackingid(::std::string&& value) {
  set_has_trackingid();
  trackingid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UAChangeAddr.trackingid)
}
#endif
inline void UAChangeAddr::set_trackingid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UAChangeAddr.trackingid)
}
inline void UAChangeAddr::set_trackingid(const char* value, size_t size) {
  set_has_trackingid();
  trackingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UAChangeAddr.trackingid)
}
inline ::std::string* UAChangeAddr::mutable_trackingid() {
  set_has_trackingid();
  // @@protoc_insertion_point(field_mutable:UAChangeAddr.trackingid)
  return trackingid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UAChangeAddr::release_trackingid() {
  // @@protoc_insertion_point(field_release:UAChangeAddr.trackingid)
  if (!has_trackingid()) {
    return NULL;
  }
  clear_has_trackingid();
  return trackingid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UAChangeAddr::set_allocated_trackingid(::std::string* trackingid) {
  if (trackingid != NULL) {
    set_has_trackingid();
  } else {
    clear_has_trackingid();
  }
  trackingid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trackingid);
  // @@protoc_insertion_point(field_set_allocated:UAChangeAddr.trackingid)
}

// required int32 dest_x = 2;
inline bool UAChangeAddr::has_dest_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UAChangeAddr::set_has_dest_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UAChangeAddr::clear_has_dest_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UAChangeAddr::clear_dest_x() {
  dest_x_ = 0;
  clear_has_dest_x();
}
inline ::google::protobuf::int32 UAChangeAddr::dest_x() const {
  // @@protoc_insertion_point(field_get:UAChangeAddr.dest_x)
  return dest_x_;
}
inline void UAChangeAddr::set_dest_x(::google::protobuf::int32 value) {
  set_has_dest_x();
  dest_x_ = value;
  // @@protoc_insertion_point(field_set:UAChangeAddr.dest_x)
}

// required int32 dest_y = 3;
inline bool UAChangeAddr::has_dest_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UAChangeAddr::set_has_dest_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UAChangeAddr::clear_has_dest_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UAChangeAddr::clear_dest_y() {
  dest_y_ = 0;
  clear_has_dest_y();
}
inline ::google::protobuf::int32 UAChangeAddr::dest_y() const {
  // @@protoc_insertion_point(field_get:UAChangeAddr.dest_y)
  return dest_y_;
}
inline void UAChangeAddr::set_dest_y(::google::protobuf::int32 value) {
  set_has_dest_y();
  dest_y_ = value;
  // @@protoc_insertion_point(field_set:UAChangeAddr.dest_y)
}

// required int64 seqnum = 4;
inline bool UAChangeAddr::has_seqnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UAChangeAddr::set_has_seqnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UAChangeAddr::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UAChangeAddr::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UAChangeAddr::seqnum() const {
  // @@protoc_insertion_point(field_get:UAChangeAddr.seqnum)
  return seqnum_;
}
inline void UAChangeAddr::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UAChangeAddr.seqnum)
}

// -------------------------------------------------------------------

// Err

// required string msg = 1;
inline bool Err::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Err::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Err::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Err::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& Err::msg() const {
  // @@protoc_insertion_point(field_get:Err.msg)
  return msg_.GetNoArena();
}
inline void Err::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Err.msg)
}
#if LANG_CXX11
inline void Err::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Err.msg)
}
#endif
inline void Err::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Err.msg)
}
inline void Err::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Err.msg)
}
inline ::std::string* Err::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:Err.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Err::release_msg() {
  // @@protoc_insertion_point(field_release:Err.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Err::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:Err.msg)
}

// required int64 originseqnum = 2;
inline bool Err::has_originseqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Err::set_has_originseqnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Err::clear_has_originseqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Err::clear_originseqnum() {
  originseqnum_ = GOOGLE_LONGLONG(0);
  clear_has_originseqnum();
}
inline ::google::protobuf::int64 Err::originseqnum() const {
  // @@protoc_insertion_point(field_get:Err.originseqnum)
  return originseqnum_;
}
inline void Err::set_originseqnum(::google::protobuf::int64 value) {
  set_has_originseqnum();
  originseqnum_ = value;
  // @@protoc_insertion_point(field_set:Err.originseqnum)
}

// required int64 seqnum = 3;
inline bool Err::has_seqnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Err::set_has_seqnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Err::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Err::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 Err::seqnum() const {
  // @@protoc_insertion_point(field_get:Err.seqnum)
  return seqnum_;
}
inline void Err::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:Err.seqnum)
}

// -------------------------------------------------------------------

// AUCommands

// repeated .AUNeedATruck need = 1;
inline int AUCommands::need_size() const {
  return need_.size();
}
inline void AUCommands::clear_need() {
  need_.Clear();
}
inline ::AUNeedATruck* AUCommands::mutable_need(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommands.need)
  return need_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AUNeedATruck >*
AUCommands::mutable_need() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.need)
  return &need_;
}
inline const ::AUNeedATruck& AUCommands::need(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.need)
  return need_.Get(index);
}
inline ::AUNeedATruck* AUCommands::add_need() {
  // @@protoc_insertion_point(field_add:AUCommands.need)
  return need_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AUNeedATruck >&
AUCommands::need() const {
  // @@protoc_insertion_point(field_list:AUCommands.need)
  return need_;
}

// repeated .AUTruckCanGo go = 2;
inline int AUCommands::go_size() const {
  return go_.size();
}
inline void AUCommands::clear_go() {
  go_.Clear();
}
inline ::AUTruckCanGo* AUCommands::mutable_go(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommands.go)
  return go_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AUTruckCanGo >*
AUCommands::mutable_go() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.go)
  return &go_;
}
inline const ::AUTruckCanGo& AUCommands::go(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.go)
  return go_.Get(index);
}
inline ::AUTruckCanGo* AUCommands::add_go() {
  // @@protoc_insertion_point(field_add:AUCommands.go)
  return go_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AUTruckCanGo >&
AUCommands::go() const {
  // @@protoc_insertion_point(field_list:AUCommands.go)
  return go_;
}

// repeated .Err errors = 3;
inline int AUCommands::errors_size() const {
  return errors_.size();
}
inline void AUCommands::clear_errors() {
  errors_.Clear();
}
inline ::Err* AUCommands::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommands.errors)
  return errors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Err >*
AUCommands::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.errors)
  return &errors_;
}
inline const ::Err& AUCommands::errors(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.errors)
  return errors_.Get(index);
}
inline ::Err* AUCommands::add_errors() {
  // @@protoc_insertion_point(field_add:AUCommands.errors)
  return errors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Err >&
AUCommands::errors() const {
  // @@protoc_insertion_point(field_list:AUCommands.errors)
  return errors_;
}

// repeated int64 acks = 4;
inline int AUCommands::acks_size() const {
  return acks_.size();
}
inline void AUCommands::clear_acks() {
  acks_.Clear();
}
inline ::google::protobuf::int64 AUCommands::acks(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.acks)
  return acks_.Get(index);
}
inline void AUCommands::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:AUCommands.acks)
}
inline void AUCommands::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:AUCommands.acks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AUCommands::acks() const {
  // @@protoc_insertion_point(field_list:AUCommands.acks)
  return acks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AUCommands::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.acks)
  return &acks_;
}

// -------------------------------------------------------------------

// UACommands

// repeated .UATruckArrived arrived = 1;
inline int UACommands::arrived_size() const {
  return arrived_.size();
}
inline void UACommands::clear_arrived() {
  arrived_.Clear();
}
inline ::UATruckArrived* UACommands::mutable_arrived(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.arrived)
  return arrived_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UATruckArrived >*
UACommands::mutable_arrived() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.arrived)
  return &arrived_;
}
inline const ::UATruckArrived& UACommands::arrived(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.arrived)
  return arrived_.Get(index);
}
inline ::UATruckArrived* UACommands::add_arrived() {
  // @@protoc_insertion_point(field_add:UACommands.arrived)
  return arrived_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UATruckArrived >&
UACommands::arrived() const {
  // @@protoc_insertion_point(field_list:UACommands.arrived)
  return arrived_;
}

// repeated .UADelivered delivered = 2;
inline int UACommands::delivered_size() const {
  return delivered_.size();
}
inline void UACommands::clear_delivered() {
  delivered_.Clear();
}
inline ::UADelivered* UACommands::mutable_delivered(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.delivered)
  return delivered_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UADelivered >*
UACommands::mutable_delivered() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.delivered)
  return &delivered_;
}
inline const ::UADelivered& UACommands::delivered(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.delivered)
  return delivered_.Get(index);
}
inline ::UADelivered* UACommands::add_delivered() {
  // @@protoc_insertion_point(field_add:UACommands.delivered)
  return delivered_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UADelivered >&
UACommands::delivered() const {
  // @@protoc_insertion_point(field_list:UACommands.delivered)
  return delivered_;
}

// repeated .UAChangeAddr changeAddr = 3;
inline int UACommands::changeaddr_size() const {
  return changeaddr_.size();
}
inline void UACommands::clear_changeaddr() {
  changeaddr_.Clear();
}
inline ::UAChangeAddr* UACommands::mutable_changeaddr(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.changeAddr)
  return changeaddr_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UAChangeAddr >*
UACommands::mutable_changeaddr() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.changeAddr)
  return &changeaddr_;
}
inline const ::UAChangeAddr& UACommands::changeaddr(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.changeAddr)
  return changeaddr_.Get(index);
}
inline ::UAChangeAddr* UACommands::add_changeaddr() {
  // @@protoc_insertion_point(field_add:UACommands.changeAddr)
  return changeaddr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UAChangeAddr >&
UACommands::changeaddr() const {
  // @@protoc_insertion_point(field_list:UACommands.changeAddr)
  return changeaddr_;
}

// repeated .Err errors = 4;
inline int UACommands::errors_size() const {
  return errors_.size();
}
inline void UACommands::clear_errors() {
  errors_.Clear();
}
inline ::Err* UACommands::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.errors)
  return errors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Err >*
UACommands::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.errors)
  return &errors_;
}
inline const ::Err& UACommands::errors(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.errors)
  return errors_.Get(index);
}
inline ::Err* UACommands::add_errors() {
  // @@protoc_insertion_point(field_add:UACommands.errors)
  return errors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Err >&
UACommands::errors() const {
  // @@protoc_insertion_point(field_list:UACommands.errors)
  return errors_;
}

// repeated int64 acks = 5;
inline int UACommands::acks_size() const {
  return acks_.size();
}
inline void UACommands::clear_acks() {
  acks_.Clear();
}
inline ::google::protobuf::int64 UACommands::acks(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.acks)
  return acks_.Get(index);
}
inline void UACommands::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:UACommands.acks)
}
inline void UACommands::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:UACommands.acks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
UACommands::acks() const {
  // @@protoc_insertion_point(field_list:UACommands.acks)
  return acks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
UACommands::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.acks)
  return &acks_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_amazon_5fups_2eproto
