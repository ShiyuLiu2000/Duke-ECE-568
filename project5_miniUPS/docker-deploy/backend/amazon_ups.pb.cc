// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: amazon_ups.proto

#include "amazon_ups.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_amazon_5fups_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AUTruckCanGo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Err;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Product;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UAChangeAddr;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UADelivered;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UATruckArrived;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AUNeedATruck;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Pack;
}  // namespace protobuf_amazon_5fups_2eproto
class ProductDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Product>
      _instance;
} _Product_default_instance_;
class PackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pack>
      _instance;
} _Pack_default_instance_;
class UAInitConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UAInitConnect>
      _instance;
} _UAInitConnect_default_instance_;
class AUConfirmConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AUConfirmConnect>
      _instance;
} _AUConfirmConnect_default_instance_;
class AUNeedATruckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AUNeedATruck>
      _instance;
} _AUNeedATruck_default_instance_;
class AUTruckCanGoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AUTruckCanGo>
      _instance;
} _AUTruckCanGo_default_instance_;
class UATruckArrivedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UATruckArrived>
      _instance;
} _UATruckArrived_default_instance_;
class UADeliveredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UADelivered>
      _instance;
} _UADelivered_default_instance_;
class UAChangeAddrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UAChangeAddr>
      _instance;
} _UAChangeAddr_default_instance_;
class ErrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Err>
      _instance;
} _Err_default_instance_;
class AUCommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AUCommands>
      _instance;
} _AUCommands_default_instance_;
class UACommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UACommands>
      _instance;
} _UACommands_default_instance_;
namespace protobuf_amazon_5fups_2eproto {
static void InitDefaultsProduct() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Product_default_instance_;
    new (ptr) ::Product();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Product::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Product =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProduct}, {}};

static void InitDefaultsPack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Pack_default_instance_;
    new (ptr) ::Pack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Pack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPack}, {
      &protobuf_amazon_5fups_2eproto::scc_info_Product.base,}};

static void InitDefaultsUAInitConnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UAInitConnect_default_instance_;
    new (ptr) ::UAInitConnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UAInitConnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UAInitConnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUAInitConnect}, {}};

static void InitDefaultsAUConfirmConnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AUConfirmConnect_default_instance_;
    new (ptr) ::AUConfirmConnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUConfirmConnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AUConfirmConnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAUConfirmConnect}, {}};

static void InitDefaultsAUNeedATruck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AUNeedATruck_default_instance_;
    new (ptr) ::AUNeedATruck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUNeedATruck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AUNeedATruck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAUNeedATruck}, {
      &protobuf_amazon_5fups_2eproto::scc_info_Pack.base,}};

static void InitDefaultsAUTruckCanGo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AUTruckCanGo_default_instance_;
    new (ptr) ::AUTruckCanGo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUTruckCanGo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AUTruckCanGo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAUTruckCanGo}, {}};

static void InitDefaultsUATruckArrived() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UATruckArrived_default_instance_;
    new (ptr) ::UATruckArrived();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UATruckArrived::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UATruckArrived =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUATruckArrived}, {}};

static void InitDefaultsUADelivered() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UADelivered_default_instance_;
    new (ptr) ::UADelivered();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UADelivered::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UADelivered =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUADelivered}, {}};

static void InitDefaultsUAChangeAddr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UAChangeAddr_default_instance_;
    new (ptr) ::UAChangeAddr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UAChangeAddr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UAChangeAddr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUAChangeAddr}, {}};

static void InitDefaultsErr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Err_default_instance_;
    new (ptr) ::Err();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Err::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Err =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErr}, {}};

static void InitDefaultsAUCommands() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AUCommands_default_instance_;
    new (ptr) ::AUCommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUCommands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AUCommands =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAUCommands}, {
      &protobuf_amazon_5fups_2eproto::scc_info_AUNeedATruck.base,
      &protobuf_amazon_5fups_2eproto::scc_info_AUTruckCanGo.base,
      &protobuf_amazon_5fups_2eproto::scc_info_Err.base,}};

static void InitDefaultsUACommands() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UACommands_default_instance_;
    new (ptr) ::UACommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UACommands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_UACommands =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsUACommands}, {
      &protobuf_amazon_5fups_2eproto::scc_info_UATruckArrived.base,
      &protobuf_amazon_5fups_2eproto::scc_info_UADelivered.base,
      &protobuf_amazon_5fups_2eproto::scc_info_UAChangeAddr.base,
      &protobuf_amazon_5fups_2eproto::scc_info_Err.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Product.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UAInitConnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AUConfirmConnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AUNeedATruck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AUTruckCanGo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UATruckArrived.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UADelivered.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UAChangeAddr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Err.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AUCommands.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UACommands.base);
}

::google::protobuf::Metadata file_level_metadata[12];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Product, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Product, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Product, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Product, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Product, count_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pack, wh_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pack, things_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pack, trackingid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pack, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pack, upsaccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pack, amazonaccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pack, dest_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pack, dest_y_),
  1,
  ~0u,
  0,
  3,
  2,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UAInitConnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UAInitConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UAInitConnect, worldid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUConfirmConnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUConfirmConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUConfirmConnect, worldid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUConfirmConnect, connected_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUNeedATruck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUNeedATruck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUNeedATruck, pack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUNeedATruck, seqnum_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUTruckCanGo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUTruckCanGo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUTruckCanGo, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUTruckCanGo, seqnum_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UATruckArrived, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UATruckArrived, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UATruckArrived, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UATruckArrived, trackingid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UATruckArrived, wh_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UATruckArrived, seqnum_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UADelivered, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UADelivered, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UADelivered, trackingid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UADelivered, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UADelivered, seqnum_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UAChangeAddr, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UAChangeAddr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UAChangeAddr, trackingid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UAChangeAddr, dest_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UAChangeAddr, dest_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UAChangeAddr, seqnum_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Err, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Err, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Err, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Err, originseqnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Err, seqnum_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, need_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, go_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, acks_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, arrived_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, delivered_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, changeaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, acks_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::Product)},
  { 11, 24, sizeof(::Pack)},
  { 32, 38, sizeof(::UAInitConnect)},
  { 39, 46, sizeof(::AUConfirmConnect)},
  { 48, 55, sizeof(::AUNeedATruck)},
  { 57, 64, sizeof(::AUTruckCanGo)},
  { 66, 75, sizeof(::UATruckArrived)},
  { 79, 87, sizeof(::UADelivered)},
  { 90, 99, sizeof(::UAChangeAddr)},
  { 103, 111, sizeof(::Err)},
  { 114, 123, sizeof(::AUCommands)},
  { 127, 137, sizeof(::UACommands)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Product_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Pack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UAInitConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AUConfirmConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AUNeedATruck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AUTruckCanGo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UATruckArrived_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UADelivered_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UAChangeAddr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Err_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AUCommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UACommands_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "amazon_ups.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020amazon_ups.proto\"9\n\007Product\022\n\n\002id\030\001 \002("
      "\003\022\023\n\013description\030\002 \002(\t\022\r\n\005count\030\003 \002(\005\"\241\001"
      "\n\004Pack\022\r\n\005wh_id\030\001 \002(\005\022\030\n\006things\030\002 \003(\0132\010."
      "Product\022\022\n\ntrackingid\030\004 \002(\t\022\021\n\tpackageid"
      "\030\005 \002(\003\022\022\n\nupsaccount\030\006 \001(\005\022\025\n\ramazonacco"
      "unt\030\007 \002(\005\022\016\n\006dest_x\030\010 \002(\005\022\016\n\006dest_y\030\t \002("
      "\005\" \n\rUAInitConnect\022\017\n\007worldid\030\001 \002(\003\"6\n\020A"
      "UConfirmConnect\022\017\n\007worldid\030\001 \002(\003\022\021\n\tconn"
      "ected\030\002 \002(\010\"3\n\014AUNeedATruck\022\023\n\004pack\030\001 \002("
      "\0132\005.Pack\022\016\n\006seqnum\030\002 \002(\003\"/\n\014AUTruckCanGo"
      "\022\017\n\007truckid\030\001 \002(\005\022\016\n\006seqnum\030\002 \002(\003\"T\n\016UAT"
      "ruckArrived\022\017\n\007truckid\030\001 \002(\005\022\022\n\ntracking"
      "id\030\002 \002(\t\022\r\n\005wh_id\030\003 \002(\005\022\016\n\006seqnum\030\004 \002(\003\""
      "B\n\013UADelivered\022\022\n\ntrackingid\030\001 \002(\t\022\017\n\007tr"
      "uckid\030\002 \002(\005\022\016\n\006seqnum\030\003 \002(\003\"R\n\014UAChangeA"
      "ddr\022\022\n\ntrackingid\030\001 \002(\t\022\016\n\006dest_x\030\002 \002(\005\022"
      "\016\n\006dest_y\030\003 \002(\005\022\016\n\006seqnum\030\004 \002(\003\"8\n\003Err\022\013"
      "\n\003msg\030\001 \002(\t\022\024\n\014originseqnum\030\002 \002(\003\022\016\n\006seq"
      "num\030\003 \002(\003\"h\n\nAUCommands\022\033\n\004need\030\001 \003(\0132\r."
      "AUNeedATruck\022\031\n\002go\030\002 \003(\0132\r.AUTruckCanGo\022"
      "\024\n\006errors\030\003 \003(\0132\004.Err\022\014\n\004acks\030\004 \003(\003\"\226\001\n\n"
      "UACommands\022 \n\007arrived\030\001 \003(\0132\017.UATruckArr"
      "ived\022\037\n\tdelivered\030\002 \003(\0132\014.UADelivered\022!\n"
      "\nchangeAddr\030\003 \003(\0132\r.UAChangeAddr\022\024\n\006erro"
      "rs\030\004 \003(\0132\004.Err\022\014\n\004acks\030\005 \003(\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 988);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "amazon_ups.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_amazon_5fups_2eproto

// ===================================================================

void Product::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Product::kIdFieldNumber;
const int Product::kDescriptionFieldNumber;
const int Product::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Product::Product()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_Product.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Product)
}
Product::Product(const Product& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:Product)
}

void Product::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&id_)) + sizeof(count_));
}

Product::~Product() {
  // @@protoc_insertion_point(destructor:Product)
  SharedDtor();
}

void Product::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Product::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Product::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Product& Product::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_Product.base);
  return *internal_default_instance();
}


void Product::Clear() {
// @@protoc_insertion_point(message_clear_start:Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    description_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&id_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Product::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Product)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Product.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Product)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Product)
  return false;
#undef DO_
}

void Product::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Product.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Product)
}

::google::protobuf::uint8* Product::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Product.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Product)
  return target;
}

size_t Product::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Product)
  size_t total_size = 0;

  if (has_description()) {
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_count()) {
    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
size_t Product::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Product)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Product::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Product)
  GOOGLE_DCHECK_NE(&from, this);
  const Product* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Product>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Product)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Product)
    MergeFrom(*source);
  }
}

void Product::MergeFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Product)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Product::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Product::CopyFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Product::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Product::Swap(Product* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Product::InternalSwap(Product* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Product::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pack::kWhIdFieldNumber;
const int Pack::kThingsFieldNumber;
const int Pack::kTrackingidFieldNumber;
const int Pack::kPackageidFieldNumber;
const int Pack::kUpsaccountFieldNumber;
const int Pack::kAmazonaccountFieldNumber;
const int Pack::kDestXFieldNumber;
const int Pack::kDestYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pack::Pack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_Pack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pack)
}
Pack::Pack(const Pack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      things_(from.things_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trackingid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trackingid()) {
    trackingid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackingid_);
  }
  ::memcpy(&wh_id_, &from.wh_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&dest_y_) -
    reinterpret_cast<char*>(&wh_id_)) + sizeof(dest_y_));
  // @@protoc_insertion_point(copy_constructor:Pack)
}

void Pack::SharedCtor() {
  trackingid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&wh_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dest_y_) -
      reinterpret_cast<char*>(&wh_id_)) + sizeof(dest_y_));
}

Pack::~Pack() {
  // @@protoc_insertion_point(destructor:Pack)
  SharedDtor();
}

void Pack::SharedDtor() {
  trackingid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Pack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pack::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pack& Pack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_Pack.base);
  return *internal_default_instance();
}


void Pack::Clear() {
// @@protoc_insertion_point(message_clear_start:Pack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  things_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    trackingid_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 126u) {
    ::memset(&wh_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dest_y_) -
        reinterpret_cast<char*>(&wh_id_)) + sizeof(dest_y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 wh_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_wh_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wh_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Product things = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_things()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string trackingid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackingid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trackingid().data(), static_cast<int>(this->trackingid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Pack.trackingid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 packageid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 upsaccount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_upsaccount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upsaccount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 amazonaccount = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_amazonaccount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amazonaccount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dest_x = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_dest_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dest_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dest_y = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_dest_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dest_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pack)
  return false;
#undef DO_
}

void Pack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 wh_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wh_id(), output);
  }

  // repeated .Product things = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->things(static_cast<int>(i)),
      output);
  }

  // required string trackingid = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackingid().data(), static_cast<int>(this->trackingid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Pack.trackingid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->trackingid(), output);
  }

  // required int64 packageid = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->packageid(), output);
  }

  // optional int32 upsaccount = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->upsaccount(), output);
  }

  // required int32 amazonaccount = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->amazonaccount(), output);
  }

  // required int32 dest_x = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->dest_x(), output);
  }

  // required int32 dest_y = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->dest_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pack)
}

::google::protobuf::uint8* Pack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 wh_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wh_id(), target);
  }

  // repeated .Product things = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->things(static_cast<int>(i)), deterministic, target);
  }

  // required string trackingid = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackingid().data(), static_cast<int>(this->trackingid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Pack.trackingid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->trackingid(), target);
  }

  // required int64 packageid = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->packageid(), target);
  }

  // optional int32 upsaccount = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->upsaccount(), target);
  }

  // required int32 amazonaccount = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->amazonaccount(), target);
  }

  // required int32 dest_x = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->dest_x(), target);
  }

  // required int32 dest_y = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->dest_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pack)
  return target;
}

size_t Pack::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Pack)
  size_t total_size = 0;

  if (has_trackingid()) {
    // required string trackingid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trackingid());
  }

  if (has_wh_id()) {
    // required int32 wh_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wh_id());
  }

  if (has_packageid()) {
    // required int64 packageid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_amazonaccount()) {
    // required int32 amazonaccount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amazonaccount());
  }

  if (has_dest_x()) {
    // required int32 dest_x = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dest_x());
  }

  if (has_dest_y()) {
    // required int32 dest_y = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dest_y());
  }

  return total_size;
}
size_t Pack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007b) ^ 0x0000007b) == 0) {  // All required fields are present.
    // required string trackingid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trackingid());

    // required int32 wh_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wh_id());

    // required int64 packageid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int32 amazonaccount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amazonaccount());

    // required int32 dest_x = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dest_x());

    // required int32 dest_y = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dest_y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Product things = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->things_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->things(static_cast<int>(i)));
    }
  }

  // optional int32 upsaccount = 6;
  if (has_upsaccount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->upsaccount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pack)
  GOOGLE_DCHECK_NE(&from, this);
  const Pack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pack)
    MergeFrom(*source);
  }
}

void Pack::MergeFrom(const Pack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  things_.MergeFrom(from.things_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_trackingid();
      trackingid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackingid_);
    }
    if (cached_has_bits & 0x00000002u) {
      wh_id_ = from.wh_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      upsaccount_ = from.upsaccount_;
    }
    if (cached_has_bits & 0x00000008u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000010u) {
      amazonaccount_ = from.amazonaccount_;
    }
    if (cached_has_bits & 0x00000020u) {
      dest_x_ = from.dest_x_;
    }
    if (cached_has_bits & 0x00000040u) {
      dest_y_ = from.dest_y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Pack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pack::CopyFrom(const Pack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pack::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007b) != 0x0000007b) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->things())) return false;
  return true;
}

void Pack::Swap(Pack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pack::InternalSwap(Pack* other) {
  using std::swap;
  CastToBase(&things_)->InternalSwap(CastToBase(&other->things_));
  trackingid_.Swap(&other->trackingid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(wh_id_, other->wh_id_);
  swap(upsaccount_, other->upsaccount_);
  swap(packageid_, other->packageid_);
  swap(amazonaccount_, other->amazonaccount_);
  swap(dest_x_, other->dest_x_);
  swap(dest_y_, other->dest_y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pack::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UAInitConnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UAInitConnect::kWorldidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UAInitConnect::UAInitConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_UAInitConnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UAInitConnect)
}
UAInitConnect::UAInitConnect(const UAInitConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worldid_ = from.worldid_;
  // @@protoc_insertion_point(copy_constructor:UAInitConnect)
}

void UAInitConnect::SharedCtor() {
  worldid_ = GOOGLE_LONGLONG(0);
}

UAInitConnect::~UAInitConnect() {
  // @@protoc_insertion_point(destructor:UAInitConnect)
  SharedDtor();
}

void UAInitConnect::SharedDtor() {
}

void UAInitConnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UAInitConnect::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UAInitConnect& UAInitConnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_UAInitConnect.base);
  return *internal_default_instance();
}


void UAInitConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:UAInitConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worldid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UAInitConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UAInitConnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_worldid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UAInitConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UAInitConnect)
  return false;
#undef DO_
}

void UAInitConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UAInitConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UAInitConnect)
}

::google::protobuf::uint8* UAInitConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UAInitConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UAInitConnect)
  return target;
}

size_t UAInitConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UAInitConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 worldid = 1;
  if (has_worldid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UAInitConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UAInitConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const UAInitConnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UAInitConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UAInitConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UAInitConnect)
    MergeFrom(*source);
  }
}

void UAInitConnect::MergeFrom(const UAInitConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UAInitConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_worldid()) {
    set_worldid(from.worldid());
  }
}

void UAInitConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UAInitConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UAInitConnect::CopyFrom(const UAInitConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UAInitConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UAInitConnect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UAInitConnect::Swap(UAInitConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UAInitConnect::InternalSwap(UAInitConnect* other) {
  using std::swap;
  swap(worldid_, other->worldid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UAInitConnect::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AUConfirmConnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUConfirmConnect::kWorldidFieldNumber;
const int AUConfirmConnect::kConnectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUConfirmConnect::AUConfirmConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_AUConfirmConnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AUConfirmConnect)
}
AUConfirmConnect::AUConfirmConnect(const AUConfirmConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&worldid_, &from.worldid_,
    static_cast<size_t>(reinterpret_cast<char*>(&connected_) -
    reinterpret_cast<char*>(&worldid_)) + sizeof(connected_));
  // @@protoc_insertion_point(copy_constructor:AUConfirmConnect)
}

void AUConfirmConnect::SharedCtor() {
  ::memset(&worldid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connected_) -
      reinterpret_cast<char*>(&worldid_)) + sizeof(connected_));
}

AUConfirmConnect::~AUConfirmConnect() {
  // @@protoc_insertion_point(destructor:AUConfirmConnect)
  SharedDtor();
}

void AUConfirmConnect::SharedDtor() {
}

void AUConfirmConnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AUConfirmConnect::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AUConfirmConnect& AUConfirmConnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_AUConfirmConnect.base);
  return *internal_default_instance();
}


void AUConfirmConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:AUConfirmConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&worldid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&connected_) -
        reinterpret_cast<char*>(&worldid_)) + sizeof(connected_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AUConfirmConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AUConfirmConnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_worldid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool connected = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_connected();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &connected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AUConfirmConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AUConfirmConnect)
  return false;
#undef DO_
}

void AUConfirmConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AUConfirmConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // required bool connected = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->connected(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AUConfirmConnect)
}

::google::protobuf::uint8* AUConfirmConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AUConfirmConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // required bool connected = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->connected(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUConfirmConnect)
  return target;
}

size_t AUConfirmConnect::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AUConfirmConnect)
  size_t total_size = 0;

  if (has_worldid()) {
    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }

  if (has_connected()) {
    // required bool connected = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t AUConfirmConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUConfirmConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());

    // required bool connected = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AUConfirmConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUConfirmConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const AUConfirmConnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AUConfirmConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUConfirmConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUConfirmConnect)
    MergeFrom(*source);
  }
}

void AUConfirmConnect::MergeFrom(const AUConfirmConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUConfirmConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      worldid_ = from.worldid_;
    }
    if (cached_has_bits & 0x00000002u) {
      connected_ = from.connected_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AUConfirmConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUConfirmConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUConfirmConnect::CopyFrom(const AUConfirmConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUConfirmConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUConfirmConnect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AUConfirmConnect::Swap(AUConfirmConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AUConfirmConnect::InternalSwap(AUConfirmConnect* other) {
  using std::swap;
  swap(worldid_, other->worldid_);
  swap(connected_, other->connected_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AUConfirmConnect::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AUNeedATruck::InitAsDefaultInstance() {
  ::_AUNeedATruck_default_instance_._instance.get_mutable()->pack_ = const_cast< ::Pack*>(
      ::Pack::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUNeedATruck::kPackFieldNumber;
const int AUNeedATruck::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUNeedATruck::AUNeedATruck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_AUNeedATruck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AUNeedATruck)
}
AUNeedATruck::AUNeedATruck(const AUNeedATruck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pack()) {
    pack_ = new ::Pack(*from.pack_);
  } else {
    pack_ = NULL;
  }
  seqnum_ = from.seqnum_;
  // @@protoc_insertion_point(copy_constructor:AUNeedATruck)
}

void AUNeedATruck::SharedCtor() {
  ::memset(&pack_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&pack_)) + sizeof(seqnum_));
}

AUNeedATruck::~AUNeedATruck() {
  // @@protoc_insertion_point(destructor:AUNeedATruck)
  SharedDtor();
}

void AUNeedATruck::SharedDtor() {
  if (this != internal_default_instance()) delete pack_;
}

void AUNeedATruck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AUNeedATruck::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AUNeedATruck& AUNeedATruck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_AUNeedATruck.base);
  return *internal_default_instance();
}


void AUNeedATruck::Clear() {
// @@protoc_insertion_point(message_clear_start:AUNeedATruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pack_ != NULL);
    pack_->Clear();
  }
  seqnum_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AUNeedATruck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AUNeedATruck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pack pack = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AUNeedATruck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AUNeedATruck)
  return false;
#undef DO_
}

void AUNeedATruck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AUNeedATruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Pack pack = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pack(), output);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AUNeedATruck)
}

::google::protobuf::uint8* AUNeedATruck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AUNeedATruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Pack pack = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pack(), deterministic, target);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUNeedATruck)
  return target;
}

size_t AUNeedATruck::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AUNeedATruck)
  size_t total_size = 0;

  if (has_pack()) {
    // required .Pack pack = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pack_);
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t AUNeedATruck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUNeedATruck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Pack pack = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pack_);

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AUNeedATruck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUNeedATruck)
  GOOGLE_DCHECK_NE(&from, this);
  const AUNeedATruck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AUNeedATruck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUNeedATruck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUNeedATruck)
    MergeFrom(*source);
  }
}

void AUNeedATruck::MergeFrom(const AUNeedATruck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUNeedATruck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pack()->::Pack::MergeFrom(from.pack());
    }
    if (cached_has_bits & 0x00000002u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AUNeedATruck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUNeedATruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUNeedATruck::CopyFrom(const AUNeedATruck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUNeedATruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUNeedATruck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_pack()) {
    if (!this->pack_->IsInitialized()) return false;
  }
  return true;
}

void AUNeedATruck::Swap(AUNeedATruck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AUNeedATruck::InternalSwap(AUNeedATruck* other) {
  using std::swap;
  swap(pack_, other->pack_);
  swap(seqnum_, other->seqnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AUNeedATruck::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AUTruckCanGo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUTruckCanGo::kTruckidFieldNumber;
const int AUTruckCanGo::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUTruckCanGo::AUTruckCanGo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_AUTruckCanGo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AUTruckCanGo)
}
AUTruckCanGo::AUTruckCanGo(const AUTruckCanGo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&truckid_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
  // @@protoc_insertion_point(copy_constructor:AUTruckCanGo)
}

void AUTruckCanGo::SharedCtor() {
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&truckid_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
}

AUTruckCanGo::~AUTruckCanGo() {
  // @@protoc_insertion_point(destructor:AUTruckCanGo)
  SharedDtor();
}

void AUTruckCanGo::SharedDtor() {
}

void AUTruckCanGo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AUTruckCanGo::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AUTruckCanGo& AUTruckCanGo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_AUTruckCanGo.base);
  return *internal_default_instance();
}


void AUTruckCanGo::Clear() {
// @@protoc_insertion_point(message_clear_start:AUTruckCanGo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&truckid_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AUTruckCanGo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AUTruckCanGo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AUTruckCanGo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AUTruckCanGo)
  return false;
#undef DO_
}

void AUTruckCanGo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AUTruckCanGo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AUTruckCanGo)
}

::google::protobuf::uint8* AUTruckCanGo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AUTruckCanGo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUTruckCanGo)
  return target;
}

size_t AUTruckCanGo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AUTruckCanGo)
  size_t total_size = 0;

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  return total_size;
}
size_t AUTruckCanGo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUTruckCanGo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AUTruckCanGo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUTruckCanGo)
  GOOGLE_DCHECK_NE(&from, this);
  const AUTruckCanGo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AUTruckCanGo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUTruckCanGo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUTruckCanGo)
    MergeFrom(*source);
  }
}

void AUTruckCanGo::MergeFrom(const AUTruckCanGo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUTruckCanGo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      truckid_ = from.truckid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AUTruckCanGo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUTruckCanGo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUTruckCanGo::CopyFrom(const AUTruckCanGo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUTruckCanGo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUTruckCanGo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AUTruckCanGo::Swap(AUTruckCanGo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AUTruckCanGo::InternalSwap(AUTruckCanGo* other) {
  using std::swap;
  swap(seqnum_, other->seqnum_);
  swap(truckid_, other->truckid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AUTruckCanGo::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UATruckArrived::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UATruckArrived::kTruckidFieldNumber;
const int UATruckArrived::kTrackingidFieldNumber;
const int UATruckArrived::kWhIdFieldNumber;
const int UATruckArrived::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UATruckArrived::UATruckArrived()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_UATruckArrived.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UATruckArrived)
}
UATruckArrived::UATruckArrived(const UATruckArrived& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trackingid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trackingid()) {
    trackingid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackingid_);
  }
  ::memcpy(&truckid_, &from.truckid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&truckid_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:UATruckArrived)
}

void UATruckArrived::SharedCtor() {
  trackingid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&truckid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&truckid_)) + sizeof(seqnum_));
}

UATruckArrived::~UATruckArrived() {
  // @@protoc_insertion_point(destructor:UATruckArrived)
  SharedDtor();
}

void UATruckArrived::SharedDtor() {
  trackingid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UATruckArrived::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UATruckArrived::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UATruckArrived& UATruckArrived::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_UATruckArrived.base);
  return *internal_default_instance();
}


void UATruckArrived::Clear() {
// @@protoc_insertion_point(message_clear_start:UATruckArrived)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    trackingid_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&truckid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&truckid_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UATruckArrived::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UATruckArrived)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string trackingid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackingid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trackingid().data(), static_cast<int>(this->trackingid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UATruckArrived.trackingid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 wh_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_wh_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wh_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UATruckArrived)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UATruckArrived)
  return false;
#undef DO_
}

void UATruckArrived::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UATruckArrived)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required string trackingid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackingid().data(), static_cast<int>(this->trackingid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UATruckArrived.trackingid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trackingid(), output);
  }

  // required int32 wh_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->wh_id(), output);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UATruckArrived)
}

::google::protobuf::uint8* UATruckArrived::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UATruckArrived)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required string trackingid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackingid().data(), static_cast<int>(this->trackingid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UATruckArrived.trackingid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trackingid(), target);
  }

  // required int32 wh_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->wh_id(), target);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UATruckArrived)
  return target;
}

size_t UATruckArrived::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UATruckArrived)
  size_t total_size = 0;

  if (has_trackingid()) {
    // required string trackingid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trackingid());
  }

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_wh_id()) {
    // required int32 wh_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wh_id());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t UATruckArrived::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UATruckArrived)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string trackingid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trackingid());

    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 wh_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wh_id());

    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UATruckArrived::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UATruckArrived)
  GOOGLE_DCHECK_NE(&from, this);
  const UATruckArrived* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UATruckArrived>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UATruckArrived)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UATruckArrived)
    MergeFrom(*source);
  }
}

void UATruckArrived::MergeFrom(const UATruckArrived& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UATruckArrived)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_trackingid();
      trackingid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackingid_);
    }
    if (cached_has_bits & 0x00000002u) {
      truckid_ = from.truckid_;
    }
    if (cached_has_bits & 0x00000004u) {
      wh_id_ = from.wh_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UATruckArrived::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UATruckArrived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UATruckArrived::CopyFrom(const UATruckArrived& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UATruckArrived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UATruckArrived::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void UATruckArrived::Swap(UATruckArrived* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UATruckArrived::InternalSwap(UATruckArrived* other) {
  using std::swap;
  trackingid_.Swap(&other->trackingid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(truckid_, other->truckid_);
  swap(wh_id_, other->wh_id_);
  swap(seqnum_, other->seqnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UATruckArrived::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UADelivered::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UADelivered::kTrackingidFieldNumber;
const int UADelivered::kTruckidFieldNumber;
const int UADelivered::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UADelivered::UADelivered()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_UADelivered.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UADelivered)
}
UADelivered::UADelivered(const UADelivered& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trackingid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trackingid()) {
    trackingid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackingid_);
  }
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&truckid_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
  // @@protoc_insertion_point(copy_constructor:UADelivered)
}

void UADelivered::SharedCtor() {
  trackingid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&truckid_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
}

UADelivered::~UADelivered() {
  // @@protoc_insertion_point(destructor:UADelivered)
  SharedDtor();
}

void UADelivered::SharedDtor() {
  trackingid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UADelivered::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UADelivered::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UADelivered& UADelivered::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_UADelivered.base);
  return *internal_default_instance();
}


void UADelivered::Clear() {
// @@protoc_insertion_point(message_clear_start:UADelivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    trackingid_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&truckid_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UADelivered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UADelivered)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string trackingid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackingid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trackingid().data(), static_cast<int>(this->trackingid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UADelivered.trackingid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 truckid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UADelivered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UADelivered)
  return false;
#undef DO_
}

void UADelivered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UADelivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string trackingid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackingid().data(), static_cast<int>(this->trackingid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UADelivered.trackingid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->trackingid(), output);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->truckid(), output);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UADelivered)
}

::google::protobuf::uint8* UADelivered::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UADelivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string trackingid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackingid().data(), static_cast<int>(this->trackingid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UADelivered.trackingid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->trackingid(), target);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->truckid(), target);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UADelivered)
  return target;
}

size_t UADelivered::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UADelivered)
  size_t total_size = 0;

  if (has_trackingid()) {
    // required string trackingid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trackingid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_truckid()) {
    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  return total_size;
}
size_t UADelivered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UADelivered)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string trackingid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trackingid());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UADelivered::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UADelivered)
  GOOGLE_DCHECK_NE(&from, this);
  const UADelivered* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UADelivered>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UADelivered)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UADelivered)
    MergeFrom(*source);
  }
}

void UADelivered::MergeFrom(const UADelivered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UADelivered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_trackingid();
      trackingid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackingid_);
    }
    if (cached_has_bits & 0x00000002u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000004u) {
      truckid_ = from.truckid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UADelivered::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UADelivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UADelivered::CopyFrom(const UADelivered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UADelivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UADelivered::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UADelivered::Swap(UADelivered* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UADelivered::InternalSwap(UADelivered* other) {
  using std::swap;
  trackingid_.Swap(&other->trackingid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(seqnum_, other->seqnum_);
  swap(truckid_, other->truckid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UADelivered::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UAChangeAddr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UAChangeAddr::kTrackingidFieldNumber;
const int UAChangeAddr::kDestXFieldNumber;
const int UAChangeAddr::kDestYFieldNumber;
const int UAChangeAddr::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UAChangeAddr::UAChangeAddr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_UAChangeAddr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UAChangeAddr)
}
UAChangeAddr::UAChangeAddr(const UAChangeAddr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trackingid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trackingid()) {
    trackingid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackingid_);
  }
  ::memcpy(&dest_x_, &from.dest_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&dest_x_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:UAChangeAddr)
}

void UAChangeAddr::SharedCtor() {
  trackingid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dest_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&dest_x_)) + sizeof(seqnum_));
}

UAChangeAddr::~UAChangeAddr() {
  // @@protoc_insertion_point(destructor:UAChangeAddr)
  SharedDtor();
}

void UAChangeAddr::SharedDtor() {
  trackingid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UAChangeAddr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UAChangeAddr::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UAChangeAddr& UAChangeAddr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_UAChangeAddr.base);
  return *internal_default_instance();
}


void UAChangeAddr::Clear() {
// @@protoc_insertion_point(message_clear_start:UAChangeAddr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    trackingid_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&dest_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&dest_x_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UAChangeAddr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UAChangeAddr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string trackingid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackingid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trackingid().data(), static_cast<int>(this->trackingid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UAChangeAddr.trackingid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dest_x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_dest_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dest_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dest_y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_dest_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dest_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UAChangeAddr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UAChangeAddr)
  return false;
#undef DO_
}

void UAChangeAddr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UAChangeAddr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string trackingid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackingid().data(), static_cast<int>(this->trackingid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UAChangeAddr.trackingid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->trackingid(), output);
  }

  // required int32 dest_x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dest_x(), output);
  }

  // required int32 dest_y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dest_y(), output);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UAChangeAddr)
}

::google::protobuf::uint8* UAChangeAddr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UAChangeAddr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string trackingid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackingid().data(), static_cast<int>(this->trackingid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UAChangeAddr.trackingid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->trackingid(), target);
  }

  // required int32 dest_x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dest_x(), target);
  }

  // required int32 dest_y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dest_y(), target);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UAChangeAddr)
  return target;
}

size_t UAChangeAddr::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UAChangeAddr)
  size_t total_size = 0;

  if (has_trackingid()) {
    // required string trackingid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trackingid());
  }

  if (has_dest_x()) {
    // required int32 dest_x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dest_x());
  }

  if (has_dest_y()) {
    // required int32 dest_y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dest_y());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t UAChangeAddr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UAChangeAddr)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string trackingid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trackingid());

    // required int32 dest_x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dest_x());

    // required int32 dest_y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dest_y());

    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UAChangeAddr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UAChangeAddr)
  GOOGLE_DCHECK_NE(&from, this);
  const UAChangeAddr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UAChangeAddr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UAChangeAddr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UAChangeAddr)
    MergeFrom(*source);
  }
}

void UAChangeAddr::MergeFrom(const UAChangeAddr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UAChangeAddr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_trackingid();
      trackingid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackingid_);
    }
    if (cached_has_bits & 0x00000002u) {
      dest_x_ = from.dest_x_;
    }
    if (cached_has_bits & 0x00000004u) {
      dest_y_ = from.dest_y_;
    }
    if (cached_has_bits & 0x00000008u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UAChangeAddr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UAChangeAddr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UAChangeAddr::CopyFrom(const UAChangeAddr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UAChangeAddr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UAChangeAddr::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void UAChangeAddr::Swap(UAChangeAddr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UAChangeAddr::InternalSwap(UAChangeAddr* other) {
  using std::swap;
  trackingid_.Swap(&other->trackingid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dest_x_, other->dest_x_);
  swap(dest_y_, other->dest_y_);
  swap(seqnum_, other->seqnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UAChangeAddr::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Err::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Err::kMsgFieldNumber;
const int Err::kOriginseqnumFieldNumber;
const int Err::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Err::Err()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_Err.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Err)
}
Err::Err(const Err& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&originseqnum_, &from.originseqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:Err)
}

void Err::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&originseqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
}

Err::~Err() {
  // @@protoc_insertion_point(destructor:Err)
  SharedDtor();
}

void Err::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Err::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Err::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Err& Err::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_Err.base);
  return *internal_default_instance();
}


void Err::Clear() {
// @@protoc_insertion_point(message_clear_start:Err)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&originseqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Err::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Err)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Err.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 originseqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_originseqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &originseqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Err)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Err)
  return false;
#undef DO_
}

void Err::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Err)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Err.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // required int64 originseqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->originseqnum(), output);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Err)
}

::google::protobuf::uint8* Err::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Err)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Err.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // required int64 originseqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->originseqnum(), target);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Err)
  return target;
}

size_t Err::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Err)
  size_t total_size = 0;

  if (has_msg()) {
    // required string msg = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  if (has_originseqnum()) {
    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t Err::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Err)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string msg = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Err::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Err)
  GOOGLE_DCHECK_NE(&from, this);
  const Err* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Err>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Err)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Err)
    MergeFrom(*source);
  }
}

void Err::MergeFrom(const Err& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Err)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      originseqnum_ = from.originseqnum_;
    }
    if (cached_has_bits & 0x00000004u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Err::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Err)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Err::CopyFrom(const Err& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Err)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Err::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Err::Swap(Err* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Err::InternalSwap(Err* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(originseqnum_, other->originseqnum_);
  swap(seqnum_, other->seqnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Err::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AUCommands::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUCommands::kNeedFieldNumber;
const int AUCommands::kGoFieldNumber;
const int AUCommands::kErrorsFieldNumber;
const int AUCommands::kAcksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUCommands::AUCommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_AUCommands.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AUCommands)
}
AUCommands::AUCommands(const AUCommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      need_(from.need_),
      go_(from.go_),
      errors_(from.errors_),
      acks_(from.acks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AUCommands)
}

void AUCommands::SharedCtor() {
}

AUCommands::~AUCommands() {
  // @@protoc_insertion_point(destructor:AUCommands)
  SharedDtor();
}

void AUCommands::SharedDtor() {
}

void AUCommands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AUCommands::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AUCommands& AUCommands::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_AUCommands.base);
  return *internal_default_instance();
}


void AUCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:AUCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  need_.Clear();
  go_.Clear();
  errors_.Clear();
  acks_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AUCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AUCommands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AUNeedATruck need = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_need()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AUTruckCanGo go = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_go()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Err errors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 acks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32u, input, this->mutable_acks())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AUCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AUCommands)
  return false;
#undef DO_
}

void AUCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AUCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AUNeedATruck need = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->need_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->need(static_cast<int>(i)),
      output);
  }

  // repeated .AUTruckCanGo go = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->go_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->go(static_cast<int>(i)),
      output);
  }

  // repeated .Err errors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->errors(static_cast<int>(i)),
      output);
  }

  // repeated int64 acks = 4;
  for (int i = 0, n = this->acks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->acks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AUCommands)
}

::google::protobuf::uint8* AUCommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AUCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AUNeedATruck need = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->need_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->need(static_cast<int>(i)), deterministic, target);
  }

  // repeated .AUTruckCanGo go = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->go_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->go(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Err errors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->errors(static_cast<int>(i)), deterministic, target);
  }

  // repeated int64 acks = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(4, this->acks_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUCommands)
  return target;
}

size_t AUCommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUCommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .AUNeedATruck need = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->need_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->need(static_cast<int>(i)));
    }
  }

  // repeated .AUTruckCanGo go = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->go_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->go(static_cast<int>(i)));
    }
  }

  // repeated .Err errors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  // repeated int64 acks = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->acks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->acks_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AUCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUCommands)
  GOOGLE_DCHECK_NE(&from, this);
  const AUCommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AUCommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUCommands)
    MergeFrom(*source);
  }
}

void AUCommands::MergeFrom(const AUCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUCommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  need_.MergeFrom(from.need_);
  go_.MergeFrom(from.go_);
  errors_.MergeFrom(from.errors_);
  acks_.MergeFrom(from.acks_);
}

void AUCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUCommands::CopyFrom(const AUCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUCommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->need())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->go())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->errors())) return false;
  return true;
}

void AUCommands::Swap(AUCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AUCommands::InternalSwap(AUCommands* other) {
  using std::swap;
  CastToBase(&need_)->InternalSwap(CastToBase(&other->need_));
  CastToBase(&go_)->InternalSwap(CastToBase(&other->go_));
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  acks_.InternalSwap(&other->acks_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AUCommands::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UACommands::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UACommands::kArrivedFieldNumber;
const int UACommands::kDeliveredFieldNumber;
const int UACommands::kChangeAddrFieldNumber;
const int UACommands::kErrorsFieldNumber;
const int UACommands::kAcksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UACommands::UACommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_amazon_5fups_2eproto::scc_info_UACommands.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UACommands)
}
UACommands::UACommands(const UACommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      arrived_(from.arrived_),
      delivered_(from.delivered_),
      changeaddr_(from.changeaddr_),
      errors_(from.errors_),
      acks_(from.acks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UACommands)
}

void UACommands::SharedCtor() {
}

UACommands::~UACommands() {
  // @@protoc_insertion_point(destructor:UACommands)
  SharedDtor();
}

void UACommands::SharedDtor() {
}

void UACommands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UACommands::descriptor() {
  ::protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UACommands& UACommands::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_amazon_5fups_2eproto::scc_info_UACommands.base);
  return *internal_default_instance();
}


void UACommands::Clear() {
// @@protoc_insertion_point(message_clear_start:UACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrived_.Clear();
  delivered_.Clear();
  changeaddr_.Clear();
  errors_.Clear();
  acks_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UACommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UACommands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UATruckArrived arrived = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arrived()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UADelivered delivered = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_delivered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UAChangeAddr changeAddr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_changeaddr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Err errors = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 acks = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 40u, input, this->mutable_acks())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UACommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UACommands)
  return false;
#undef DO_
}

void UACommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UATruckArrived arrived = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrived_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->arrived(static_cast<int>(i)),
      output);
  }

  // repeated .UADelivered delivered = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delivered_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->delivered(static_cast<int>(i)),
      output);
  }

  // repeated .UAChangeAddr changeAddr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changeaddr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->changeaddr(static_cast<int>(i)),
      output);
  }

  // repeated .Err errors = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->errors(static_cast<int>(i)),
      output);
  }

  // repeated int64 acks = 5;
  for (int i = 0, n = this->acks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      5, this->acks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UACommands)
}

::google::protobuf::uint8* UACommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UATruckArrived arrived = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrived_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->arrived(static_cast<int>(i)), deterministic, target);
  }

  // repeated .UADelivered delivered = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delivered_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->delivered(static_cast<int>(i)), deterministic, target);
  }

  // repeated .UAChangeAddr changeAddr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changeaddr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->changeaddr(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Err errors = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->errors(static_cast<int>(i)), deterministic, target);
  }

  // repeated int64 acks = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(5, this->acks_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UACommands)
  return target;
}

size_t UACommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UACommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .UATruckArrived arrived = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->arrived_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrived(static_cast<int>(i)));
    }
  }

  // repeated .UADelivered delivered = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->delivered_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->delivered(static_cast<int>(i)));
    }
  }

  // repeated .UAChangeAddr changeAddr = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->changeaddr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->changeaddr(static_cast<int>(i)));
    }
  }

  // repeated .Err errors = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  // repeated int64 acks = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->acks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->acks_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UACommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UACommands)
  GOOGLE_DCHECK_NE(&from, this);
  const UACommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UACommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UACommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UACommands)
    MergeFrom(*source);
  }
}

void UACommands::MergeFrom(const UACommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UACommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrived_.MergeFrom(from.arrived_);
  delivered_.MergeFrom(from.delivered_);
  changeaddr_.MergeFrom(from.changeaddr_);
  errors_.MergeFrom(from.errors_);
  acks_.MergeFrom(from.acks_);
}

void UACommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UACommands::CopyFrom(const UACommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UACommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->arrived())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->delivered())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->changeaddr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->errors())) return false;
  return true;
}

void UACommands::Swap(UACommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UACommands::InternalSwap(UACommands* other) {
  using std::swap;
  CastToBase(&arrived_)->InternalSwap(CastToBase(&other->arrived_));
  CastToBase(&delivered_)->InternalSwap(CastToBase(&other->delivered_));
  CastToBase(&changeaddr_)->InternalSwap(CastToBase(&other->changeaddr_));
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  acks_.InternalSwap(&other->acks_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UACommands::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_5fups_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Product* Arena::CreateMaybeMessage< ::Product >(Arena* arena) {
  return Arena::CreateInternal< ::Product >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pack* Arena::CreateMaybeMessage< ::Pack >(Arena* arena) {
  return Arena::CreateInternal< ::Pack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UAInitConnect* Arena::CreateMaybeMessage< ::UAInitConnect >(Arena* arena) {
  return Arena::CreateInternal< ::UAInitConnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AUConfirmConnect* Arena::CreateMaybeMessage< ::AUConfirmConnect >(Arena* arena) {
  return Arena::CreateInternal< ::AUConfirmConnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AUNeedATruck* Arena::CreateMaybeMessage< ::AUNeedATruck >(Arena* arena) {
  return Arena::CreateInternal< ::AUNeedATruck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AUTruckCanGo* Arena::CreateMaybeMessage< ::AUTruckCanGo >(Arena* arena) {
  return Arena::CreateInternal< ::AUTruckCanGo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UATruckArrived* Arena::CreateMaybeMessage< ::UATruckArrived >(Arena* arena) {
  return Arena::CreateInternal< ::UATruckArrived >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UADelivered* Arena::CreateMaybeMessage< ::UADelivered >(Arena* arena) {
  return Arena::CreateInternal< ::UADelivered >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UAChangeAddr* Arena::CreateMaybeMessage< ::UAChangeAddr >(Arena* arena) {
  return Arena::CreateInternal< ::UAChangeAddr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Err* Arena::CreateMaybeMessage< ::Err >(Arena* arena) {
  return Arena::CreateInternal< ::Err >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AUCommands* Arena::CreateMaybeMessage< ::AUCommands >(Arena* arena) {
  return Arena::CreateInternal< ::AUCommands >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UACommands* Arena::CreateMaybeMessage< ::UACommands >(Arena* arena) {
  return Arena::CreateInternal< ::UACommands >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
